#
# Create an instance to act as a MIDI "hub". Assumes the presence of the
# default VPC in the chosen region.
#
# Further information: https://github.com/Brettles/midihub
#

AWSTemplateFormatVersion: 2010-09-09
Description: Deploy MidiHub on Ubuntu

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
    - t3.nano
    - t3.micro
    - t3.small
    - t3.medium
    - t3.large
    - t3.xlarge
    - m5.large
    - c5.large
    ConstraintDescription: Must be a valid EC2 instance type.
  ListenerPorts:
    Description: Comma-separated list of UDP ports to listen on
    Type: String
    Default: 5008,5010

Outputs:
  ElasticIP:
    Description: Public IP address of MIDI hub server
    Value: !Ref ElasticIP
  ListenerPorts:
    Description: UDP ports for MIDI daemon
    Value: !Ref ListenerPorts

Mappings:
  AWSRegion2AMI:
    us-east-1:
      HVM64: ami-0149b2da6ceec4bb0
    us-west-2:
      HVM64: ami-0c09c7eb16d3e8e70
    us-west-1:
      HVM64: ami-03f6d497fceb40069
    eu-west-1:
      HVM64: ami-0fd8802f94ed1c969
    eu-west-2:
      HVM64: ami-04842bc62789b682e
    eu-west-3:
      HVM64: ami-064736ff8301af3ee
    eu-central-1:
      HVM64: ami-06148e0e81e5187c8
    ap-northeast-1:
      HVM64: ami-09b18720cb71042df
    ap-northeast-2:
      HVM64: ami-07d16c043aa8e5153
    ap-northeast-3:
      HVM64: ami-09d2f3a31110c6ad4
    ap-southeast-1:
      HVM64: ami-00e912d13fbb4f225
    ap-southeast-2:
      HVM64: ami-055166f8a8041fbf1
    ap-south-1:
      HVM64: ami-024c319d5d14b463e
    us-east-2:
      HVM64: ami-0d5bf08bc8017c83b
    ca-central-1:
      HVM64: ami-043a72cf696697251
    sa-east-1:
      HVM64: ami-00742e66d44c13cd9

Resources:
  MidiHubInstance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a simple PHP application
      AWS::CloudFormation::Init:
        config:
          files:
            "/home/ubuntu/.aws/config":
              content: !Sub |
                [default]
                region = ${AWS::Region}
              mode: '000644'
              owner: ubuntu
              group: ubuntu
            "/home/ubuntu/midiports":
              content: !Sub |
                ${ListenerPorts}
              mode: '000644'
              owner: ubuntu
              group: ubuntu
            "/home/ubuntu/crontab.ubuntu":
              content: !Sub |
                @reboot mv /home/ubuntu/output.log /home/ubuntu/output.old
                @reboot rm /home/ubuntu/output-*.log
                * * * * * (cd /home/ubuntu; ./midihub.py) >>/home/ubuntu/output.log 2>&1
              mode: '000644'
              owner: ubuntu
              group: ubuntu
    Properties:
      ImageId: !FindInMap [AWSRegion2AMI, !Ref AWS::Region, HVM64]
      InstanceType: !Ref InstanceType
      Tags:
      - Key: Name
        Value: midiHub
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds:
      - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install python3-pip -y
          mkdir -p /opt/aws/
          sudo pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          sudo ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
          /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource MidiHubInstance --region ${AWS::Region}
          /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MidiHubInstance --region ${AWS::Region}
          sudo apt-get install cmake g++ pkg-config libavahi-client-dev libfmt-dev alsa-utils alsa-base libghc-alsa-core-dev avahi-utils linux-modules-extra-`uname -r` -y
          sudo pip3 install boto3
          cd /home/ubuntu
          git clone https://github.com/davidmoreno/rtpmidid
          cd rtpmidid
          make build
          cd /home/ubuntu
          git clone https://github.com/Brettles/midihub
          ln midihub/midihub.py midihub.py
          chmod +x midihub.py
          chown -R ubuntu:ubuntu *
          crontab -u ubuntu crontab.ubuntu
          sudo reboot

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'midiHub-${AWS::StackName}'
      GroupDescription: Enable SSH and RTP for MIDI
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: 5000
        ToPort: 5600
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: MidiHubInstance
    Properties: 
      InstanceId: !Ref MidiHubInstance

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'midiHub-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: Lightsail
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - Lightsail:GetRegions
            Resource: '*'

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub 'midiHub-${AWS::StackName}'
      Path: /
      Roles: 
       - !Ref InstanceRole

